// detail.js ‚Äî Qu·∫£n l√Ω t√†i kho·∫£n, m√£ kh√≥a t·ªß, v√† s·ªë t·ªß ƒë√£ ƒëƒÉng k√Ω
document.addEventListener("DOMContentLoaded", async () => {
  const user = JSON.parse(sessionStorage.getItem("user"));
  if (!user) {
    alert("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc.");
    window.location.href = "logon.html";
    return;
  }

  // ‚úÖ L·∫§Y TH√äM ELEMENT M·ªöI
  const nameEl = document.getElementById("name");
  const emailEl = document.getElementById("email");
  const phoneEl = document.getElementById("phone");
  const passwordEl = document.getElementById("password");
  const hintEl = document.getElementById("hint");
  const lockerCodeEl = document.getElementById("lockerCode");
  const registeredLockerEl = document.getElementById("registeredLocker"); // <-- Th√™m d√≤ng n√†y

  const changeBtn = document.getElementById("change-btn");
  const saveBtn = document.getElementById("save-btn");
  const logoutBtn = document.getElementById("logout-btn");
  const backBtn = document.getElementById("back-btn");
  const historyBtn = document.getElementById("history-btn");

  // üß† Lu√¥n l·∫•y l·∫°i user m·ªõi nh·∫•t t·ª´ server
  try {
    const res = await fetch(
      `https://smart-locker-kgnx.onrender.com/user/${user.id}`
    );
    const data = await res.json();
    if (res.ok && data.user) {
      sessionStorage.setItem("user", JSON.stringify(data.user));
      Object.assign(user, data.user);
    }
  } catch (err) {
    console.warn("Kh√¥ng th·ªÉ load l·∫°i th√¥ng tin user:", err.message);
  }

  // ‚úÖ HI·ªÇN TH·ªä TH√äM TH√îNG TIN M·ªöI
  nameEl.textContent = user.name || "";
  emailEl.textContent = user.email || "";
  phoneEl.textContent = user.phone || "";
  passwordEl.textContent = user.password || "";
  hintEl.textContent = user.hint || "";
  if (lockerCodeEl)
    lockerCodeEl.textContent = user.lockerCode || "Ch∆∞a thi·∫øt l·∫≠p";
  if (registeredLockerEl)
    // <-- Th√™m kh·ªëi if n√†y
    registeredLockerEl.textContent = user.registeredLocker || "Ch∆∞a ƒëƒÉng k√Ω t·ªß";

  // ‚úÖ CHO PH√âP CH·ªàNH S·ª¨A ELEMENT M·ªöI
  changeBtn.addEventListener("click", () => {
    // Th√™m registeredLockerEl v√†o danh s√°ch
    [
      nameEl,
      emailEl,
      phoneEl,
      passwordEl,
      hintEl,
      lockerCodeEl,
      registeredLockerEl,
    ].forEach((el) => {
      if (el) {
        el.contentEditable = true;
        el.style.borderBottom = "2px solid #0063ff";
      }
    });
    saveBtn.style.display = "inline-block";
  });

  // ‚úÖ L∆ØU TR∆Ø·ªúNG M·ªöI KHI B·∫§M SAVE
  saveBtn.addEventListener("click", async () => {
    const newData = {
      name: nameEl.textContent.trim(),
      email: emailEl.textContent.trim(),
      phone: phoneEl.textContent.trim(),
      password: passwordEl.textContent.trim(),
      hint: hintEl.textContent.trim(),
      lockerCode: lockerCodeEl
        ? lockerCodeEl.textContent.trim()
        : user.lockerCode,
      // Th√™m d√≤ng n√†y ƒë·ªÉ ƒë·ªçc gi√° tr·ªã m·ªõi
      registeredLocker: registeredLockerEl
        ? registeredLockerEl.textContent.trim()
        : user.registeredLocker,
    };

    try {
      const res = await fetch("https://smart-locker-kgnx.onrender.com/update", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: user.id, ...newData }), // G·ª≠i t·∫•t c·∫£ d·ªØ li·ªáu m·ªõi
      });

      const data = await res.json();
      if (res.ok && data.user) {
        alert("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
        sessionStorage.setItem("user", JSON.stringify(data.user));
        // Th√™m registeredLockerEl v√†o danh s√°ch
        [
          nameEl,
          emailEl,
          phoneEl,
          passwordEl,
          hintEl,
          lockerCodeEl,
          registeredLockerEl,
        ].forEach((el) => {
          if (el) {
            el.contentEditable = false;
            el.style.borderBottom = "none";
          }
        });
        saveBtn.style.display = "none";
      } else {
        alert("‚ùå " + (data.error || "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t"));
      }
    } catch (err) {
      alert("‚ùå L·ªói: " + err.message);
    }
  });

  // (C√°c n√∫t Back, Logout, History kh√¥ng thay ƒë·ªïi)
  backBtn.addEventListener("click", () => (window.location.href = "menu.html"));
  logoutBtn.addEventListener("click", () => {
    sessionStorage.removeItem("user");
    alert("üîì B·∫°n ƒë√£ ƒëƒÉng xu·∫•t!");
    window.location.href = "logon.html";
  });

  historyBtn.addEventListener("click", () => {
    window.location.href = "history.html";
  });
});
